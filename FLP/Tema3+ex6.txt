% (x*y)*z = u*(u)^(-1)
% Lista solutiei				Lista de rezolvat				Operatie
% multimea vida					(x*y)*z = u*(u)^(-1)				DESCOMPUNE
% multimea vida					x*y = u, z = (u)^(-1)				REZOLVA
% u = x*y					z = (x*y)^(-1)					REZOLVA
% u = x*y, z = (x*y)^(-1)			multimea vida					FINAL
% ---------------------------------------------------------------------------------------

connected(1,2).
connected(2,1).
connected(1,3).
connected(3,2).
connected(3,4).

% Tema: solutia pentru a elimina ciclurile este sa avem o lista de noduri vizitate 
% path / 2 
% path(X, Y) - true daca exista un drum de la X la Y 
path(X, Y) :- path_aux(X, Y, [X]).

path_aux(X, Y, _) :-
    connected(X, Y).
path_aux(X, Y, V) :-
    connected(X, Z),
    not(member(Z, V)),
    path_aux(Z, Y, [Z | V]).
% ---------------------------------------------------------------------------------------
Ex 6:

% Animal  database

animal(alligator). 
animal(tortue).
animal(caribou).
animal(ours).
animal(cheval).
animal(vache).
animal(lapin).

% mutant / 1 - genereaza toate animalele mutante

mutant(X) :-
    animal(A1),
    animal(A2),
    A1 \= A2,
    name(A1, L1),
    name(A2, L2),
    append(_, Y, L1),
    append(Y, R2, L2),
    Y \= [],
    append(L1, R2, R),
    name(X, R).
    